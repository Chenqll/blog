# git基本使用和注意事项
- 为了过CI，必须在每一个git clone之后设置用户名和邮箱
  ```bash
  git config --global user.email "gitHub邮箱"
  git config --global user.name "gitHub用户名"
  ···
- 在对主仓库提交PR之前一定要先创建分支，然后在分支上进行你的修改，不然在master主分支上进行的修改是提交不上去的（premission的问题），此时再切换到其他其他分支进行提交是不会有在master上的修改。

- 但是出现上述情况不要慌可以将master上的修改放入缓存，然后切换到别的分支再加载缓存，具体如下：
  ```
  on branch master
  >>> git stash
  >>> git stash list # 打印一下stash
  >>> git stash show -p stash@{0} # 打印一下stash的内容
  >>> git checkout *branch*
  >>> git stash pop # 将stash的缓存加载进来
  ```
- 如果想要找到某个版本和里面的内容使用
  ```
  >>> git reflog #查看历史记录
    fe66181 HEAD@{20}: checkout: moving from cql5.11 to master
    c658c46 HEAD@{21}: checkout: moving from master to cql5.11
    fe66181 HEAD@{22}: checkout: moving from cql5.0 to master
    c658c46 HEAD@{23}: checkout: moving from cql5.11 to cql5.0
    c658c46 HEAD@{24}: checkout: moving from master to cql5.11
    fe66181 HEAD@{25}: commit: 5.11
    59b72cc HEAD@{26}: commit: 5.11
    545367f HEAD@{27}: checkout: moving from cql5.0 to master
    c658c46 HEAD@{28}: checkout: moving from cql5.11 to cql5.0
    c658c46 HEAD@{29}: checkout: moving from cql5.0 to cql5.11
    c658c46 HEAD@{30}: commit: fix
    2bceec6 HEAD@{31}: checkout: moving from cql5.0 to cql5.0
    2bceec6 HEAD@{32}: checkout: moving from master to cql5.0
    545367f HEAD@{33}: checkout: moving from cql5.0 to master
    2bceec6 HEAD@{34}: checkout: moving from master to cql5.0
    545367f HEAD@{35}: commit: fix
    2bceec6 HEAD@{36}: pull origin cql5.0: Fast-forward
    cae837f HEAD@{37}: clone: from git@github.com:Oneflow-Inc/oneflow-api-cn.git
  >>> git reset cae837f # 退回到某个特定的版本
  >>> git status 查看一下是不是自己要的版本
  >>> git reset 2bceec6 # 如果不是就继续遍历所有HEAD
  ```

- 做完上述操作之后很容易产生conflict 于是：


- git log --stat 查看当前工作区将要push的内容